using System;
using System.Collections.Generic;
using System.ComponentModel.Composition;
using System.IO;
using System.Linq;
using System.Reflection;
using XrmToolBox.Extensibility;
using XrmToolBox.Extensibility.Interfaces;

namespace BulkSecurity
{
    // Do not forget to update version number and author (company attribute) in AssemblyInfo.cs class
    // To generate Base64 string for Images below, you can use https://www.base64-image.de/
    [Export(typeof(IXrmToolBoxPlugin)),
        ExportMetadata("Name", "Bulk Security"),
        ExportMetadata("Description", "An XRM ToolBox Tool"),
        // Please specify the base64 content of a 32x32 pixels image
        ExportMetadata("SmallImageBase64", "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"),
        // Please specify the base64 content of a 80x80 pixels image
        ExportMetadata("BigImageBase64", ""),
        ExportMetadata("BackgroundColor", "Lavender"),
        ExportMetadata("PrimaryFontColor", "Black"),
        ExportMetadata("SecondaryFontColor", "Gray")]
    public class MyPlugin : PluginBase
    {
        public override IXrmToolBoxPluginControl GetControl()
        {
            return new MyPluginControl();
        }

        /// <summary>
        /// Constructor 
        /// </summary>
        public MyPlugin()
        {
            // If you have external assemblies that you need to load, uncomment the following to 
            // hook into the event that will fire when an Assembly fails to resolve
            // AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(AssemblyResolveEventHandler);
        }

        /// <summary>
        /// Event fired by CLR when an assembly reference fails to load
        /// Assumes that related assemblies will be loaded from a subfolder named the same as the Plugin
        /// For example, a folder named Sample.XrmToolBox.MyPlugin 
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="args"></param>
        /// <returns></returns>
        private Assembly AssemblyResolveEventHandler(object sender, ResolveEventArgs args)
        {
            Assembly loadAssembly = null;
            Assembly currAssembly = Assembly.GetExecutingAssembly();

            // base name of the assembly that failed to resolve
            var argName = args.Name.Substring(0, args.Name.IndexOf(","));

            // check to see if the failing assembly is one that we reference.
            List<AssemblyName> refAssemblies = currAssembly.GetReferencedAssemblies().ToList();
            var refAssembly = refAssemblies.Where(a => a.Name == argName).FirstOrDefault();

            // if the current unresolved assembly is referenced by our plugin, attempt to load
            if (refAssembly != null)
            {
                // load from the path to this plugin assembly, not host executable
                string dir = Path.GetDirectoryName(currAssembly.Location).ToLower();
                string folder = Path.GetFileNameWithoutExtension(currAssembly.Location);
                dir = Path.Combine(dir, folder);

                var assmbPath = Path.Combine(dir, $"{argName}.dll");

                if (File.Exists(assmbPath))
                {
                    loadAssembly = Assembly.LoadFrom(assmbPath);
                }
                else
                {
                    throw new FileNotFoundException($"Unable to locate dependency: {assmbPath}");
                }
            }

            return loadAssembly;
        }
    }
}